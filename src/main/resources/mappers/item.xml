<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog.devjay.logistics.repository.item.ItemMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO items (name, price, quantity<if test="warehouseId != null">, warehouse_id</if>)
        VALUES (#{name}, #{price}, #{quantity}<if test="warehouseId != null">, #{warehouseId}</if>)
    </insert>

    <select id="findById" resultType="Item">
        SELECT *
        FROM items
        WHERE id = #{id}
    </select>

    <select id="findAll" resultType="Item">
        SELECT *
        FROM items
        <where>
            <if test="name != null and name != ''">
                AND LOWER(name) like concat('%', LOWER(#{name}), '%')
            </if>
            <if test="price != null">
                AND price >= #{price}
            </if>
            <if test="warehouseId != null">
                <choose>
                    <when test="warehouseId == 0">
                        AND warehouse_id IS NULL
                    </when>
                    <otherwise>
                        AND warehouse_id = #{warehouseId}
                    </otherwise>
                </choose>
            </if>
        </where>
        <choose>
            <when test="orderBy == 'DESC'">
                ORDER BY price DESC
            </when>
            <otherwise>
                ORDER BY price ASC
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{size} * (#{page} - 1)
    </select>

    <select id="findAllCount" resultType="int">
        SELECT COUNT(*) FROM items
        <where>
            <if test="name != null and name != ''">
                AND LOWER(name) like concat('%', LOWER(#{name}), '%')
            </if>
            <if test="price != null">
                AND price >= #{price}
            </if>
            <if test="warehouseId != null">
                AND warehouse_id = #{warehouseId}
            </if>
        </where>
    </select>

    <update id="update">
        UPDATE items
        <set>
            <if test="updateItemDTO.price != null">price = #{updateItemDTO.price},</if>
            <choose>
                <when test="updateItemDTO.warehouseId == 0">
                    warehouse_id = null,
                </when>
                <otherwise>
                    <if test="updateItemDTO.warehouseId != null">warehouse_id = #{updateItemDTO.warehouseId},</if>
                </otherwise>
            </choose>
            <if test="updateItemDTO.name != null">name = #{updateItemDTO.name},</if>
            <if test="updateItemDTO.quantity != null">quantity = #{updateItemDTO.quantity},</if>
            updated_at = CURRENT_TIMESTAMP
        </set>
        WHERE id = #{id}
    </update>

    <select id="findItemsByWarehouseId" resultType="Item">
        SELECT i.*
        FROM items i
        INNER JOIN warehouses w ON i.warehouse_id = w.id
        WHERE w.id = #{warehouseId}
        <if test="searchItemDTO.name != null">
            AND LOWER(i.name) LIKE concat('%', LOWER(#{searchItemDTO.name}), '%')
        </if>
        <if test="searchItemDTO.price != null">
            AND i.price >= #{searchItemDTO.price}
        </if>
        <choose>
            <when test="searchItemDTO.orderBy == 'DESC'">
                ORDER BY i.price DESC
            </when>
            <otherwise>
                ORDER BY i.price ASC
            </otherwise>
        </choose>
        LIMIT #{searchItemDTO.size} OFFSET #{searchItemDTO.size} * (#{searchItemDTO.page} - 1)
    </select>

    <delete id="delete">
        delete
        from items
        where id = #{id}
    </delete>
</mapper>